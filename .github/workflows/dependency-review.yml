name: Dependency License Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  license-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Axios Dependency
      - name: Install Axios
        run: npm install axios

      # Step 4: Create and Run License Check Script Inline
      - name: Analyze Licenses
        run: |
          # Create the analyze-licenses.js script
          cat << 'EOF' > analyze-licenses.js
          const fs = require('fs');
          const axios = require('axios');

          // Load package.json
          const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf-8'));
          const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };

          async function analyzeDependencies() {
              if (!dependencies || Object.keys(dependencies).length === 0) {
                  console.log("No dependencies found in package.json");
                  return;
              }

              console.log(`Found ${Object.keys(dependencies).length} dependencies. Checking for licenses...`);
              for (const [packageName, version] of Object.entries(dependencies)) {
                  console.log(`\nAnalyzing ${packageName}@${version}...`);
                  try {
                      const response = await axios.get(`https://registry.npmjs.org/${packageName}`);
                      const latestVersion = response.data['dist-tags']?.latest || version;
                      const license = response.data.versions[latestVersion]?.license;
                      const npmUrl = `https://www.npmjs.com/package/${packageName}`;

                      if (license) {
                          console.log(`- License: ${license}`);
                          if (typeof license === 'object' && license.type) {
                              console.warn(`⚠️  ${packageName} has a dual license: ${license.type}. More details: ${npmUrl}`);
                          } else {
                              console.log(`- License details available at: ${npmUrl}`);
                          }
                      } else {
                          console.warn(`⚠️  License information is missing for ${packageName}. Check: ${npmUrl}`);
                      }
                  } catch (error) {
                      console.error(`Error fetching details for ${packageName}:`, error.message);
                  }
              }
          }

          analyzeDependencies();
          EOF

          # Run the script
          node analyze-licenses.js
