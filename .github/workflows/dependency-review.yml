name: Dependency License Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  license-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install All Dependencies
      - name: Install All Dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Create and Run License Check Script Inline
      - name: Analyze Licenses
        run: |
          # Create the analyze-licenses.js script
          cat << 'EOF' > analyze-licenses.js
          const fs = require('fs');
          const axios = require('axios');

          // List of common copyleft licenses and variations
          const copyleftLicenses = [
              "GPL", "LGPL", "AGPL", "MPL", "CC-BY-SA", "EPL",
              "GPL-2.0", "GPL-3.0", "LGPL-2.1", "LGPL-3.0", "AGPL-3.0",
              "MPL-1.1", "MPL-2.0", "CC-BY-SA-3.0", "CC-BY-SA-4.0",
              "EPL-1.0", "EPL-2.0", "OFL", "CPL", "OSL", "APL"
          ];

          // Function to determine if a license is copyleft
          function isCopyleftLicense(license) {
              return copyleftLicenses.some(copyleft => license.toUpperCase().includes(copyleft));
          }

          // Load package.json
          const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf-8'));
          const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };

          async function analyzeDependencies() {
              if (!dependencies || Object.keys(dependencies).length === 0) {
                  console.log("No dependencies found in package.json");
                  return;
              }

              const results = [];
              console.log(`Found ${Object.keys(dependencies).length} dependencies. Checking for licenses...`);

              for (const [packageName, version] of Object.entries(dependencies)) {
                  console.log(`\nAnalyzing ${packageName}@${version}...`);
                  try {
                      const response = await axios.get(`https://registry.npmjs.org/${packageName}`);
                      const latestVersion = response.data['dist-tags']?.latest || version;
                      const license = response.data.versions[latestVersion]?.license || "Unknown";
                      const npmUrl = `https://www.npmjs.com/package/${packageName}`;
                      const copyleft = isCopyleftLicense(license);

                      results.push({
                          packageName,
                          version: latestVersion,
                          license,
                          npmUrl,
                          copyleft
                      });
                  } catch (error) {
                      console.error(`Error fetching details for ${packageName}:`, error.message);
                      results.push({
                          packageName,
                          version,
                          license: "Error fetching license",
                          npmUrl: `https://www.npmjs.com/package/${packageName}`,
                          copyleft: false
                      });
                  }
              }

              // Generate HTML report
              const logoUrl = "https://home.solwerindia.com/_next/static/media/logo.e8b7d2b2.png";
              const repoName = process.env.GITHUB_REPOSITORY?.split('/')[1] || "Repository";

              const htmlContent = `
                  <!DOCTYPE html>
                  <html>
                  <head>
                      <title>Dependency License Report</title>
                      <style>
                          table {
                              width: 100%;
                              border-collapse: collapse;
                          }
                          th, td {
                              border: 1px solid #ddd;
                              padding: 8px;
                              text-align: left;
                          }
                          th {
                              background-color: #f2f2f2;
                          }
                          .copyleft {
                              background-color: #f8d7da;
                              color: #721c24;
                          }
                          .non-copyleft {
                              background-color: #d4edda;
                              color: #155724;
                          }
                          .logo {
                              display: block;
                              margin: 0 auto;
                              width: 200px;
                          }
                          h1 {
                              text-align: center;
                          }
                      </style>
                  </head>
                  <body>
                      <img src="${logoUrl}" alt="Logo" class="logo" />
                      <h1>Dependency License Report for ${repoName}</h1>
                      <table>
                          <tr>
                              <th>Package</th>
                              <th>Version</th>
                              <th>License</th>
                              <th>Details</th>
                          </tr>
                          ${results.map(result => `
                              <tr class="${result.copyleft ? 'copyleft' : 'non-copyleft'}">
                                  <td>${result.packageName}</td>
                                  <td>${result.version}</td>
                                  <td>${result.license}</td>
                                  <td><a href="${result.npmUrl}" target="_blank">View on npm</a></td>
                              </tr>
                          `).join('')}
                      </table>
                  </body>
                  </html>
              `;

              fs.writeFileSync('dependency-license-report.html', htmlContent);
              console.log('Report generated: dependency-license-report.html');
          }

          analyzeDependencies();
          EOF

          # Run the script
          node analyze-licenses.js

      # Step 5: Upload HTML Report as an Artifact
      - name: Upload License Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-license-report
          path: dependency-license-report.html
