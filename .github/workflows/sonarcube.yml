name: SonarQube SAST and Library Analysis

on:
  push:
    branches: [main] # perform the analysis on the main branch
  pull_request:
    branches: [main] # perform the analysis on the main branch

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Install SonarQube Scanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli-4.6.2.2472-linux.zip
        export PATH=$PATH:$PWD/sonar-scanner-4.6.2.2472-linux/bin

    - name: Analyze with SonarQube
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # provide SonarQube token as secret
      run: |
        sonar-scanner \
          -Dsonar.projectKey=my-project \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.java.binaries=**/target/classes \
          -Dsonar.java.libraries=**/target/lib/*.jar \
          -Dsonar.scm.disabled=true \
          -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
          -Dsonar.pullrequest.branch=${{ github.head_ref }} \
          -Dsonar.pullrequest.base=${{ github.base_ref }} \
          -Dsonar.pullrequest.provider=GitHub

      # the above step will analyze the code and libraries with SonarQube

    - name: Upload SonarQube Analysis Results as Artifact
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: SonarQube Analysis Results
        path: |
          ${{ github.workspace }}/.scannerwork/report-task.txt
          ${{ github.workspace }}/target/sonar
      # this step will upload the SonarQube analysis results as an artifact in HTML format
